{"id":"8Y780Y","version":57,"snippetIdentifier":"8Y780Y-57","jsonPayload":"{\"code\":\"var createScene = async function () {\\r\\n    var pushButtonCore;\\r\\n    var index = 0; \\r\\n\\r\\n    var scene = new BABYLON.Scene(engine);\\r\\n    var camera = new BABYLON.ArcRotateCamera(\\\"cam\\\", -Math.PI / 2, Math.PI / 2, 20, BABYLON.Vector3.Zero());\\r\\n    var light = new BABYLON.HemisphericLight(\\\"sun\\\", new BABYLON.Vector3(0,1,0), scene);\\r\\n    var anchor = new BABYLON.TransformNode(\\\"\\\");\\r\\n    \\r\\n    camera.wheelDeltaPercentage = 0.01;\\r\\n    camera.attachControl(canvas, true);\\r\\n    camera.lowerRadiusLimit = 10;\\r\\n    camera.upperRadiusLimit = 30;\\r\\n\\r\\n    // Create the 3D UI manager\\r\\n    var manager = new BABYLON.GUI.GUI3DManager(scene);\\r\\n\\r\\n    var panel = new BABYLON.GUI.CylinderPanel();\\r\\n    panel.margin = 0.75;\\r\\n \\r\\n    manager.addControl(panel);\\r\\n    panel.linkToTransformNode(anchor);\\r\\n    panel.position.z = -1.5;\\r\\n    \\r\\n    // The first parameter can be used to specify which mesh to import. Here we import all meshes\\r\\n    BABYLON.SceneLoader.ImportMesh(\\\"\\\", \\\"./david.blob.core.windows.net/babylonjs/MRTK/\\\", \\\"pushButton.glb\\\", scene, function (newMeshes) {\\r\\n        pushButtonCore = newMeshes[0];\\r\\n        makePushButtons();\\r\\n        pushButtonCore.setEnabled(false);\\r\\n    });\\r\\n\\r\\n    function makePushButton(mesh, hoverColor) {\\r\\n        var cylinder = mesh.getChildMeshes(false, (node) => { return node.name.indexOf(\\\"Cylinder\\\") !== -1 })[0];\\r\\n        var cylinderMat = cylinder.material.clone();\\r\\n        cylinderMat.albedoColor = new BABYLON.Color3(0.5, 0.19, 0);\\r\\n        cylinder.material = cylinderMat;\\r\\n        var pushButton = new BABYLON.GUI.MeshButton3D(mesh, \\\"pushButton\\\" + index);\\r\\n        pushButton.pointerEnterAnimation = () => {\\r\\n            cylinder.material.albedoColor = hoverColor;\\r\\n        };\\r\\n        pushButton.pointerOutAnimation = () => {\\r\\n             cylinder.material.albedoColor = new BABYLON.Color3(0.5, 0.19, 0);\\r\\n        };\\r\\n        pushButton.pointerDownAnimation = () => {\\r\\n            cylinder.position.y = 0;\\r\\n        }\\r\\n        pushButton.pointerUpAnimation = () => {\\r\\n            cylinder.position.y = 0.21;\\r\\n        }\\r\\n        pushButton.onPointerDownObservable.add(() => {\\r\\n            console.log(pushButton.name + \\\" pushed.\\\");\\r\\n        });\\r\\n        panel.addControl(pushButton);\\r\\n        index++;\\r\\n    }\\r\\n\\r\\n    function makePushButtons() {\\r\\n        var color;\\r\\n        var newPushButton;\\r\\n        var colors = [{r: 0.25, g:0, b:0}, {r: 0, g:0.25, b:0}, {r: 0, g:0, b:0.25},\\r\\n                      {r: 0.25, g:0.25, b:0}, {r: 0, g:0.25, b:0.25}, {r: 0.25, g:0, b:0.25}];\\r\\n\\r\\n        panel.blockLayout = true;\\r\\n        for (var i = 0; i < 10; i++) {\\r\\n            newPushButton = pushButtonCore.clone(\\\"pushButton\\\" + index);\\r\\n            color = new BABYLON.Color3(colors[i % 6].r, colors[i % 6].g, colors[i % 6].b);\\r\\n            makePushButton(newPushButton, color);\\r\\n        }\\r\\n        panel.blockLayout = false;\\r\\n    }\\r\\n\\r\\n    var xr = await scene.createDefaultXRExperienceAsync({floorMeshes: []})\\r\\n    // default is vr, change to ar\\r\\n    xr.enterExitUI[\\\"_buttons\\\"][0].sessionMode = \\\"immersive-ar\\\";\\r\\n    \\r\\n    return scene;\\r\\n}\"}","name":"","description":"","tags":""}
