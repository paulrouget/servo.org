{"id":"9K3MRA","version":2,"snippetIdentifier":"9K3MRA-2","jsonPayload":"{\"code\":\"var createScene = async function () {\\r\\n\\r\\n    // This creates a basic Babylon Scene object (non-mesh)\\r\\n    var scene = new BABYLON.Scene(engine);\\r\\n\\r\\n    // This creates and positions a free camera (non-mesh)\\r\\n    var camera = new BABYLON.FreeCamera(\\\"camera1\\\", new BABYLON.Vector3(0, 5, -5), scene);\\r\\n\\r\\n    // This targets the camera to scene origin\\r\\n    camera.setTarget(BABYLON.Vector3.Zero());\\r\\n\\r\\n    // This attaches the camera to the canvas\\r\\n    camera.attachControl(canvas, true);\\r\\n\\r\\n    // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\\r\\n    var light = new BABYLON.HemisphericLight(\\\"light\\\", new BABYLON.Vector3(0, 1, 0), scene);\\r\\n\\r\\n    // Default intensity is 1. Let's dim the light a small amount\\r\\n    light.intensity = 0.7;\\r\\n\\r\\n    // Our built-in 'sphere' shape.\\r\\n    var sphere = BABYLON.MeshBuilder.CreateSphere(\\\"sphere\\\", {diameter: 1.4, segments: 32}, scene);\\r\\n\\r\\n    // Move the sphere upward 1/2 its height\\r\\n    sphere.position.y = 1;\\r\\n\\r\\n    sphere.material = new BABYLON.StandardMaterial(\\\"sphereMat\\\", scene);\\r\\n\\r\\n    const environment = scene.createDefaultEnvironment();\\r\\n\\r\\n    // GUI\\r\\n    var plane = BABYLON.Mesh.CreatePlane(\\\"plane\\\", 1);\\r\\n    plane.position = new BABYLON.Vector3(1.4, 1.5, 0.4)\\r\\n    var advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateForMesh(plane);\\r\\n    var panel = new BABYLON.GUI.StackPanel();    \\r\\n    advancedTexture.addControl(panel);  \\r\\n    var header = new BABYLON.GUI.TextBlock();\\r\\n    header.text = \\\"Color GUI\\\";\\r\\n    header.height = \\\"100px\\\";\\r\\n    header.color = \\\"white\\\";\\r\\n    header.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;\\r\\n    header.fontSize = \\\"120\\\"\\r\\n    panel.addControl(header); \\r\\n    var picker = new BABYLON.GUI.ColorPicker();\\r\\n    picker.value = sphere.material.diffuseColor;\\r\\n    picker.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;\\r\\n    picker.height = \\\"350px\\\";\\r\\n    picker.width = \\\"350px\\\";\\r\\n    picker.onValueChangedObservable.add(function(value) {\\r\\n        sphere.material.diffuseColor.copyFrom(value);\\r\\n    });\\r\\n    panel.addControl(picker);\\r\\n\\r\\n    // XR\\r\\n    const xrHelper = await scene.createDefaultXRExperienceAsync({\\r\\n        floorMeshes: [environment.ground]\\r\\n    });\\r\\n\\r\\n    return scene;\\r\\n\\r\\n};\"}","name":"WebXR basic example with teleportation","description":"A Basic WebXR scene with teleportation enabled.\n\n[RaananW]","tags":"webxr,teleportation,vr"}